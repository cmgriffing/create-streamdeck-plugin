{"version":3,"sources":["webpack:///../docs-src/development.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kfAMO,IAAMA,EAAe,Q,0MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,gBADR,kBAGA,2EACA,uBAAK,sBAAMC,WAAW,OAAU,IAA3B,qBAEL,4DAA2C,0BAAYA,WAAW,KAAvB,UAA3C,QAAsG,0BAAYA,WAAW,KAAvB,OAAtG,mM,wMAKJJ,EAAWK,gBAAiB","file":"component---docs-src-development-mdx-9797cb356e0d9143c911.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/cmgriffing/repos/create-streamdeck-plugin/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"-development\"\n    }}>{`ðŸš§ Development`}</h1>\n    <p>{`Developing with CSDP is fairly simple. Simply run:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`yarn dev:watch\n`}</code></pre>\n    <p>{`This will listen for changes to the `}<inlineCode parentName=\"p\">{`public`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` folders. It then compiles the app using development settings for a faster iteration cycle. After that, it copies the results to your platform-specific Elgato StreamDeck plugins folder.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}