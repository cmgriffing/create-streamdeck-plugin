(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"81nd":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return l}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var o=n("/FXl"),r=n("TjRS");n("aD51");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs-src/features.mdx"}});var i={_frontmatter:s},c=r.a;function l(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(o.b)(c,a({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"-features"},"üöè Features"),Object(o.b)("p",null,"CSDP has several feature options available when scaffolding out your plugin."),Object(o.b)("p",null,"These cover any necessary additional build commands and boilerplate."),Object(o.b)("h2",{id:"obs"},"OBS"),Object(o.b)("p",null,"By selecting this feature, CSDP will scaffold out some some of the events and code for connecting to obs-websocket."),Object(o.b)("p",null,"You must have obs-websocket installed as a plugin into OBS. You can find the relevant Releases here on Github:"),Object(o.b)("p",null,Object(o.b)("a",a({parentName:"p"},{href:"https://github.com/Palakis/obs-websocket/releases"}),"https://github.com/Palakis/obs-websocket/releases")),Object(o.b)("h2",{id:"spotify-in-progress"},"Spotify (in progress)"),Object(o.b)("p",null,"There is currently a feature option for Spotify being worked on. It is not ready for release yet, but some of its references may be found in the cli tool and code (during the alpha testing of this CSDP)."))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs-src/features.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-src-features-mdx-e771c464c1771c21f3f3.js.map