{"version":3,"sources":["webpack:///../docs-src/guide.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,oMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,uBAGA,uFACA,iBAAQ,CACN,GAAM,uBADR,uBAGA,8DAA6C,0BAAYC,WAAW,KAAvB,OAA7C,KACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,mCAEL,yFACA,iBAAQ,CACN,GAAM,aADR,aAGA,yEACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,2CAEL,2BACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,8CAEL,0CACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,+BAEL,iBAAQ,CACN,GAAM,yBADR,yBAGA,oLACA,iBAAQ,CACN,GAAM,uBADR,wBAGA,oLACA,iBAAQ,CACN,GAAM,uBADR,wBAGA,6MAA4L,0BAAYA,WAAW,KAAvB,OAC5L,iBAAQ,CACN,GAAM,2BADR,4BAGA,+IACA,iBAAQ,CACN,GAAM,+BADR,gCAGA,yFAAwE,mBAAGA,WAAW,KAAQ,CAC1F,KAAQ,yBAD4D,UAAxE,mCAGA,4BAAW,mBAAGA,WAAW,KAAQ,CAC7B,KAAQ,kBADD,eAAX,8B,kMAOJJ,EAAWK,gBAAiB","file":"component---docs-src-guide-mdx-7dca449eb7b5cefdbd8e.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/cmgriffing/repos/create-streamdeck-plugin/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"Ô∏è-getting-started\"\n    }}>{`üó∫Ô∏è Getting Started`}</h1>\n    <p>{`Here we will help guide you through the usage of the CLI tool.`}</p>\n    <h2 {...{\n      \"id\": \"running-the-command\"\n    }}>{`Running the command`}</h2>\n    <p>{`To run the command we recommend using `}<inlineCode parentName=\"p\">{`npx`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npx create-streamdeck-plugin\n`}</code></pre>\n    <p>{`This will ensure that you are always running the latest version.`}</p>\n    <h3 {...{\n      \"id\": \"or-global\"\n    }}>{`Or Global`}</h3>\n    <p>{`You can also install it globally, if you insist:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`yarn global create-streamdeck-plugin\n`}</code></pre>\n    <p>{`or`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install -g create-streamdeck-plugin\n`}</code></pre>\n    <p>{`Then just run it:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`create-streamdeck-plugin\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-interactive-steps\"\n    }}>{`The Interactive Steps`}</h2>\n    <p>{`When running the command this tool currently only supports a guided creation process. In the future, it will allow an automated workflow via cli arguments.`}</p>\n    <h3 {...{\n      \"id\": \"step-1-project-name\"\n    }}>{`Step 1: Project Name`}</h3>\n    <p>{`This value is used in various places. We handle various cases as needed for injecting the name within the app. eg: dasherized, camelCased, and PascalCased.`}</p>\n    <h3 {...{\n      \"id\": \"step-2-project-path\"\n    }}>{`Step 2: Project Path`}</h3>\n    <p>{`The default value is dasherized form your project name as a subfolder of your current path. You can modify this value as you see fit. eg: Pointing at the current directory would be `}<inlineCode parentName=\"p\">{`./`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"step-3-project-features\"\n    }}>{`Step 3: Project Features`}</h3>\n    <p>{`At this step you can select some of the boilerplate that can be autofilled for you. OBS, Spotify, and more on the way.`}</p>\n    <h3 {...{\n      \"id\": \"step-4-scaffolding-finished\"\n    }}>{`Step 4: Scaffolding Finished`}</h3>\n    <p>{`Hooray! You are done. Navigate to the path you installed into in `}<a parentName=\"p\" {...{\n        \"href\": \"#step-2-project-path\"\n      }}>{`Step 2`}</a>{` and open your favorite editor.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"./development\"\n      }}>{`Development`}</a>{` for the next steps.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}